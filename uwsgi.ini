[uwsgi]

# 專案名稱
project=RestaurantOrderSystem
# 運行 uwsgi 的用戶和群組
uid=www-data
gid=www-data
# 設定工作資料夾路徑 (配置文件的路徑)
base=/app

# 切換 工作路徑 到 專案路徑
chdir=%(base)/%(project)
# 使用 django 提供的 wsgi.py 應用程序入口模塊
wsgi-file = /app/%(project)/wsgi.py
# module=%(project).wsgi:application

# 啟用主進程
master=True
# 啟用的子線程數量
processes=2

# 監聽 socket 地址
socket=0.0.0.0:8000
# 設定 socket 用戶、組、權限
chown-socket=%(uid):www-data
chmod-socket=664

# 啟動自動清理
vacuum=True
# 每個工作進程的最大請求數量
max-requests=5000

# 储存 主進程 PID 文件路徑
pidfile=/tmp/%(project)-master.pid
# 後台運行，將輸出寫入日誌文件
daemonize=/tmp/%(project)-uwsgi.log

# 設定 請求超時時間(s)，超時則丟棄請求
harakiri = 90
# 啟用 harakiri 超時日誌
harakiri-verbose = true

# POST 請求緩沖大小
post buffering = 8192
# 緩沖區大小
buffer-size = 65535

# 輸出內存使用報告
memory-report = true

# 平滑地重新加載，最長等待 10s
reload-mercy = 10

# 當可用內存低於 1024MB，重新啟動
reload-on-as = 1024